{"version":3,"sources":["assets/exchange2.svg","components/CurrencySelector/CurrencySelector.js","components/ExchangeInput/ExchangeInput.js","Loader.js","assets/usa-flag.png","assets/russian-flag.png","assets/european-flag.png","assets/english-flag.png","components/CoursesTable/CoursesTable.js","components/main/Exchange.js","App.js","serviceWorker.js","index.js"],"names":["CurrencySelector","props","handleChange","bind","sliceValue","quote","this","onCurrencyChange","setState","value","slice","currencyObj","currency","Object","keys","sort","a","b","className","defaultValue","onChange","map","Option","React","Component","ExchangeInput","selectCurrency","onExchangeMoney","money","right","maxLength","placeholder","min","type","currencyList","flagUrl","usaFlag","name","europeFlag","englishFlag","russiaFlag","CourseTable","calcCourse","course","Math","round","output","entries","compare","reduce","accum","k","v","country","style","display","width","height","src","alt","values","filter","toMoney","course1","course2","Exchange","handleLeftSelector","handleRightSelector","handleLeftInput","handleRightInput","getCurrency","today","Date","state","loading","leftInput","rightInput","leftQuote","rightQuote","courseCurrentDate","toLocaleDateString","year","month","day","then","quotes","USDAMD","USDEUR","USDGBP","USDRUB","USDUSD","Promise","resolve","setTimeout","Loader","exportLeftInput","exportRightInput","leftInputCourse","rightInputCourse","mainLogo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4a29987c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/exchange2.f0742396.svg\";","import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\nclass CurrencySelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.sliceValue = this.sliceValue.bind(this);\r\n  }\r\n\r\n  handleChange(quote) {\r\n    this.props.onCurrencyChange(quote);\r\n    this.setState({quote})\r\n  }\r\n\r\n  sliceValue(value) {\r\n    return value.slice(3)\r\n  }\r\n\r\n  render() {\r\n    let currencyObj = this.props?.currency;\r\n\r\n    let currency = Object.keys(currencyObj);\r\n    currency.sort(function(a, b) { return currencyObj[b] - currencyObj[a] });\r\n\r\n    return (\r\n      <form>\r\n        <label className='w-100'>\r\n          <Select className='w-100' defaultValue={this.sliceValue(currency[0])} onChange={this.handleChange}>\r\n            {currency.map(value => {\r\n              return <Select.Option key={value} value={this.sliceValue(value)}>{this.sliceValue(value)}</Select.Option>\r\n            })}\r\n          </Select>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrencySelector\r\n","import React from \"react\";\r\nimport CurrencySelector from \"../CurrencySelector/CurrencySelector\";\r\nimport {InputNumber} from 'antd';\r\nimport './ExchangeInput.css'\r\n\r\nclass ExchangeInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.selectCurrency = this.selectCurrency.bind(this);\r\n  }\r\n\r\n  handleChange(value) {\r\n\r\n    if (value < 0) {\r\n      return\r\n    }\r\n\r\n    this.props.onExchangeMoney(value);\r\n  }\r\n\r\n  selectCurrency(quote) {\r\n    this.props.onCurrencyChange(quote);\r\n  }\r\n\r\n  render() {\r\n    const money = this.props.money;\r\n\r\n    return (\r\n      <fieldset className={!this.props.right ? 'fieldset-left' : 'fieldset-right'}>\r\n        <CurrencySelector\r\n          right={this.props.right}\r\n          currency={this.props.currency}\r\n          onCurrencyChange={this.selectCurrency}/>\r\n        <legend className='legend-item'>{ !this.props.right ? 'Ունեմ' : 'Ցանկանում եմ' }</legend>\r\n        <InputNumber\r\n          maxLength={15}\r\n          placeholder={'0.00'}\r\n          value={money}\r\n          min=\"0\"\r\n          className='input-item'\r\n          type=\"number\"\r\n          onChange={this.handleChange}/>\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExchangeInput\r\n","import React from \"react\";\r\n\r\n// eslint-disable-next-line\r\nexport default () => <div className='loader-item'>\r\n  <div className=\"lds-roller\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n</div>\r\n","export default __webpack_public_path__ + \"static/media/usa-flag.5d70d738.png\";","export default __webpack_public_path__ + \"static/media/russian-flag.9c74de43.png\";","export default __webpack_public_path__ + \"static/media/european-flag.b16f8446.png\";","export default __webpack_public_path__ + \"static/media/english-flag.d867177b.png\";","import React from \"react\";\r\nimport usaFlag from '../../assets/usa-flag.png';\r\nimport russiaFlag from '../../assets/russian-flag.png';\r\nimport europeFlag from '../../assets/european-flag.png';\r\nimport englishFlag from '../../assets/english-flag.png';\r\nimport './CoursesTable.css';\r\n\r\nconst currencyList = [\r\n  {\r\n    flagUrl: usaFlag, name: 'USD'\r\n  },\r\n  {\r\n    flagUrl: europeFlag, name: 'EUR'\r\n  },\r\n  {\r\n    flagUrl: englishFlag, name: 'GBP'\r\n  },\r\n  {\r\n    flagUrl: russiaFlag, name: 'RUB'\r\n  },\r\n]\r\n\r\nclass CourseTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.calcCourse = this.calcCourse.bind(this)\r\n  }\r\n\r\n  calcCourse(value) {\r\n    const course = this.props.currency['USDAMD'];\r\n\r\n    if (!value || value === 1) {\r\n      return 0\r\n    }\r\n\r\n    if (course === value) {\r\n      return Math.round(course * 100) / 100\r\n    }\r\n\r\n    return Math.round(course / value * 100) / 100\r\n  }\r\n\r\n  compare(a, b) {\r\n    if (a[0] === 'USDAMD') return -1\r\n\r\n    return a - b\r\n  }\r\n\r\n  render() {\r\n    let currencyObj = this.props?.currency;\r\n\r\n    let currency = Object.entries(currencyObj);\r\n\r\n    const output = currency.sort(this.compare).reduce((accum, [k, v]) => {\r\n      accum[k] = v;\r\n      return accum;\r\n    }, {});\r\n\r\n    return (\r\n        <div className='currency-list'>\r\n          <div className='currency-list-names'>\r\n            {currencyList.map(country => {\r\n              return <div style={{display: 'flex'}} key={country.name}>\r\n                <div>\r\n                  <img\r\n                    className='flag'\r\n                    width='25'\r\n                    height='25'\r\n                    src={country.flagUrl}\r\n                    alt=\"country.flagUrl\"\r\n                  />\r\n                </div>\r\n                <div className='country-name-item'>{country.name}</div>\r\n              </div>\r\n            })}\r\n          </div>\r\n          <div className='currency-list-values'>\r\n            {Object.values(output)\r\n              .map(this.calcCourse)\r\n              .filter(value => !!value)\r\n              .map(value => {\r\n              return <div className='currency-course-list' key={value}>{value}</div>\r\n            })}\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseTable\r\n","import React from \"react\";\r\nimport mainLogo from '../../assets/exchange2.svg';\r\nimport ExchangeInput from \"../ExchangeInput/ExchangeInput\";\r\nimport Loader from '../../Loader'\r\nimport CourseTable from \"../CoursesTable/CoursesTable\";\r\nimport './Exchange.css'\r\n\r\n\r\nconst URL = process.env.REACT_APP_DB_URL;\r\n\r\nfunction toMoney(money = 0, course) {\r\n  if (!money) {\r\n    return 0\r\n  }\r\n  return Math.round(money * course * 100) / 100\r\n}\r\n\r\nfunction calcCourse(course1, course2) {\r\n  return course1 / course2;\r\n}\r\n\r\nexport class Exchange extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleLeftSelector = this.handleLeftSelector.bind(this);\r\n    this.handleRightSelector = this.handleRightSelector.bind(this);\r\n    this.handleLeftInput = this.handleLeftInput.bind(this);\r\n    this.handleRightInput = this.handleRightInput.bind(this);\r\n    this.getCurrency = this.getCurrency.bind(this);\r\n\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    const today  = new Date();\r\n\r\n    this.state = {\r\n      loading: true,\r\n      leftInput: 0,\r\n      rightInput: 0,\r\n      leftQuote: 'AMD',\r\n      rightQuote: 'AMD',\r\n      currency: {},\r\n      courseCurrentDate: today.toLocaleDateString(\"en-US\", options),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrency().then(() => this.setState({loading: false}));\r\n  }\r\n\r\n  getCurrency() {\r\n    const quotes = {\r\n      USDAMD: 493.649897,\r\n      USDEUR: 0.841999,\r\n      USDGBP: 0.722715,\r\n      USDRUB: 72.758599,\r\n      USDUSD: 1\r\n    }\r\n\r\n    // return new Promise((resolve) => setTimeout(() =>\r\n    //     fetch(URL)\r\n    //       .then(response => response.json())\r\n    //       .then(currency => {\r\n    //         this.setState({ currency: currency.quotes });\r\n    //         resolve();\r\n    //       }),\r\n    //   1000)\r\n    // );\r\n\r\n    return new Promise((resolve) => setTimeout(() => {\r\n        this.setState({ currency: quotes });\r\n        resolve();\r\n      }, 1000)\r\n    );\r\n  }\r\n\r\n  handleLeftSelector(leftQuote) {\r\n    this.setState({ leftQuote });\r\n  }\r\n\r\n  handleRightSelector(rightQuote) {\r\n    this.setState({ rightQuote });\r\n  }\r\n\r\n  handleLeftInput(leftInput) {\r\n    this.setState({ rightInput: 0 });\r\n    this.setState({ leftInput });\r\n  }\r\n\r\n  handleRightInput(rightInput) {\r\n    this.setState({ leftInput: 0 });\r\n    this.setState({ rightInput });\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <Loader/>;\r\n    }\r\n\r\n    const {leftQuote, rightQuote, leftInput, rightInput, courseCurrentDate } = this.state\r\n\r\n    const leftInputCourse = this.state.currency['USD' + leftQuote];\r\n    const rightInputCourse = this.state.currency['USD' + rightQuote];\r\n\r\n    let exportLeftInput, exportRightInput\r\n\r\n    if (leftInput) {\r\n      exportRightInput = toMoney(leftInput, calcCourse(rightInputCourse, leftInputCourse)) ?? leftInput;\r\n    } else if (rightInput) {\r\n      exportLeftInput = toMoney(rightInput, calcCourse(leftInputCourse, rightInputCourse)) ?? rightInput;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1 className='main-title'>Exchange</h1>\r\n        <div className='content-page'>\r\n          <CourseTable currency={this.state.currency}/>\r\n          <div className='exchange-page'>\r\n            <ExchangeInput\r\n              money={exportLeftInput}\r\n              currency={this.state.currency}\r\n              onExchangeMoney={this.handleLeftInput}\r\n              onCurrencyChange={this.handleLeftSelector}/>\r\n            <img className='exchange-img' src={mainLogo} alt=\"exchange.png\"/>\r\n            <ExchangeInput\r\n              money={exportRightInput}\r\n              currency={this.state.currency}\r\n              right={true}\r\n              onExchangeMoney={this.handleRightInput}\r\n              onCurrencyChange={this.handleRightSelector}/>\r\n          </div>\r\n          <div className='update-date-text'>Թարմացված է {courseCurrentDate}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {Exchange} from \"./components/main/Exchange\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Exchange />\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}